{"version":3,"file":"static/js/134.a9c39621.chunk.js","mappings":"mPAmEA,UA5De,WACb,IAAAA,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAzCG,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA0CJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAAkCR,EAAAA,EAAAA,WAAS,GAAMS,GAAAb,EAAAA,EAAAA,GAAAY,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACxBG,GAAWC,EAAAA,EAAAA,MAEXC,EAAQjB,EAAakB,IAAI,UAG/BC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEE,OAFFF,EAAAC,KAAA,EAEjBb,GAAa,GAAMY,EAAAE,KAAA,EACIC,EAAAA,EAAAA,IAAQ,gBAAiB,CAC9CC,OAAQ,CAAEb,MAAAA,KACT,KAAD,EAFIQ,EAAQC,EAAAK,KAGdrB,EAAiBe,EAASO,KAAKC,SAASP,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,UAExCS,EAAAA,EAAAA,IAAM,2BAADC,OAA4BV,EAAAQ,GAAMG,UAAW,QAE9B,OAF8BX,EAAAC,KAAA,GAElDb,GAAa,GAAOY,EAAAY,OAAA,6BAAAZ,EAAAa,OAAA,GAAAf,EAAA,wBAEvB,kBAZiB,OAAAH,EAAAmB,MAAA,KAAAC,UAAA,KAclBrB,GAfkB,CAgBpB,GAAG,CAACH,IAQJ,OACEyB,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAAA,QAAMC,SAPW,SAACC,GACpBA,EAAEC,iBACF9C,EAAgB,CAAEgB,MAAOZ,GAC3B,EAIiCsC,SAAA,EAC3BD,EAAAA,EAAAA,KAAA,SACEM,KAAK,OACLC,KAAK,cACLC,YAAY,eACZC,MAAO9C,EACP+C,SAAU,SAACN,GAAC,OAAKxC,EAAcwC,EAAEO,OAAOF,MAAM,KAEhDT,EAAAA,EAAAA,KAAA,UAAQM,KAAK,SAAQL,SAAC,WACrB9B,IAAa6B,EAAAA,EAAAA,KAACY,EAAAA,EAAM,IACpB7C,EAAc8C,KAAI,SAACC,GAAK,OAC7Bd,EAAAA,EAAAA,KAAA,MAAAC,UACAD,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,MAAO,CAAEC,KAAM5C,GAAY6C,GAAE,WAAAxB,OAAaoB,EAAMK,IAAKlB,SACxDa,EAAMM,SAFAN,EAAMK,GAIV,QAMT,C","sources":["pages/Movies.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport api from \"components/services/api\";\nimport { toast } from \"react-toastify\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  const query = searchParams.get('query');\n\n\n  useEffect(() => {\n    if (!query) return; \n    const searchMovies = async () => {  \n      try {\n        setIsLoading(true);\n        const response = await api.get('/search/movie', {\n          params: { query },\n        });\n        setSearchResults(response.data.results);\n      } catch (error) {\n        toast(`Error searching movies: ${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    searchMovies(); \n  }, [query]);\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSearchParams({ query: inputValue });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"searchInput\"\n          placeholder=\"Search movie\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n        {isLoading && <Loader />}\n        {searchResults.map((movie) => (\n    <li key={movie.id}>\n    <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n      {movie.title}\n    </Link>\n    </li>\n ))}\n      </form>\n\n    </div>\n  );\n};\n\nexport default Movies;"],"names":["_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","inputValue","setInputValue","_useState3","_useState4","searchResults","setSearchResults","_useState5","_useState6","isLoading","setIsLoading","location","useLocation","query","get","useEffect","searchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","api","params","sent","data","results","t0","toast","concat","message","finish","stop","apply","arguments","_jsx","children","_jsxs","onSubmit","e","preventDefault","type","name","placeholder","value","onChange","target","Loader","map","movie","Link","state","from","to","id","title"],"sourceRoot":""}