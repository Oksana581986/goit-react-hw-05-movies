{"version":3,"file":"static/js/415.a23f7dab.chunk.js","mappings":"0OA+CA,UA1Ca,WACb,IAAAA,GAA4CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDI,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,GACxCI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACxBG,GAAWC,EAAAA,EAAAA,MAmBjB,OAjBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEH,OAFGF,EAAAC,KAAA,EAEtBX,GAAa,GAAMU,EAAAE,KAAA,EACIC,EAAAA,EAAAA,IAAQ,uBAAuB,KAAD,EAA/CJ,EAAQC,EAAAI,KACdlB,EAAkBa,EAASM,KAAKC,SAASN,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEzCQ,QAAQC,MAAM,kCAAiCT,EAAAO,IAAS,QAEpC,OAFoCP,EAAAC,KAAA,GAExDX,GAAa,GAAOU,EAAAU,OAAA,6BAAAV,EAAAW,OAAA,GAAAb,EAAA,wBAEvB,kBAVsB,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KAYvBnB,GACF,GAAG,KAIHoB,EAAAA,EAAAA,KAAA,QAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,oBACJC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CACG1B,IAAayB,EAAAA,EAAAA,KAACG,EAAAA,EAAM,IACpBhC,EAAeiC,KAAI,SAAAC,GAAK,OACvBL,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,MAAO,CAAEC,KAAM/B,GAAYgC,GAAE,WAAAC,OAAaL,EAAMM,IAAKV,SACxDI,EAAMO,SAFFP,EAAMM,GAIV,WAMf,C","sources":["pages/Home.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from \"components/services/api\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst Home = () => {\nconst [trendingMovies, setTrendingMovies] = useState([]);\nconst [isLoading, setIsLoading] = useState(false);\nconst location = useLocation();\n\nuseEffect(() => {\n    const getTrendingMovies = async () => {\n      try {\n        setIsLoading(true);\n        const response = await api.get('/trending/movie/day');\n        setTrendingMovies(response.data.results);\n      } catch (error) {\n        console.error('Error fetching trending movies:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getTrendingMovies();\n  }, []);\n\n\nreturn (\n  <main>\n    <div>\n      <h2>Trending today</h2>\n      <ul>\n        {isLoading && <Loader />}\n        {trendingMovies.map(movie => (\n          <li key={movie.id}>\n            <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </main>\n);\n};\n\n\nexport default Home;\n"],"names":["_useState","useState","_useState2","_slicedToArray","trendingMovies","setTrendingMovies","_useState3","_useState4","isLoading","setIsLoading","location","useLocation","useEffect","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","api","sent","data","results","t0","console","error","finish","stop","apply","arguments","_jsx","children","_jsxs","Loader","map","movie","Link","state","from","to","concat","id","title"],"sourceRoot":""}