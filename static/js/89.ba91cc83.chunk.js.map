{"version":3,"file":"static/js/89.ba91cc83.chunk.js","mappings":"uRAIaA,EAAY,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OAClBC,GAAWC,EAAAA,EAAAA,MACjB,OACIC,EAAAA,EAAAA,KAAA,OAAAC,SACKJ,EAAOK,KAAI,SAACC,GAAK,OACdH,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,MAAO,CAAEC,KAAMR,GAAYS,GAAE,WAAAC,OAAaL,EAAMM,IAAKR,UAC3DD,EAAAA,EAAAA,KAAA,MAAAC,SAAKE,EAAMO,WAFLP,EAAMM,GAIV,KAItB,EC4CA,EAtDe,WACb,IAAAE,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAzCG,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA0CJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAAkCR,EAAAA,EAAAA,WAAS,GAAMS,GAAAb,EAAAA,EAAAA,GAAAY,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAExBG,EAAQf,EAAagB,IAAI,UAG/BC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAY,eAAArC,GAAAsC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEE,OAFFF,EAAAC,KAAA,EAEjBV,GAAa,GAAMS,EAAAE,KAAA,EACIC,EAAAA,EAAAA,IAAQ,wBAAyB,CACtDC,OAAQ,CAAEZ,MAAAA,KACT,KAAD,EAFIO,EAAQC,EAAAK,KAGdlB,EAAiBY,EAASO,KAAKC,SAASP,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,UAExCS,EAAAA,EAAAA,IAAM,2BAADvC,OAA4B8B,EAAAQ,GAAME,UAAW,QAE9B,OAF8BV,EAAAC,KAAA,GAElDV,GAAa,GAAOS,EAAAW,OAAA,6BAAAX,EAAAY,OAAA,GAAAd,EAAA,wBAEvB,kBAZiB,OAAAxC,EAAAuD,MAAA,KAAAC,UAAA,KAclBnB,GAfkB,CAgBpB,GAAG,CAACH,IAQJ,OACEuB,EAAAA,EAAAA,MAAA,OAAApD,SAAA,EACEoD,EAAAA,EAAAA,MAAA,QAAMC,SAPW,SAACC,GACpBA,EAAEC,iBACFxC,EAAgB,CAAEc,MAAOV,GAC3B,EAIiCnB,SAAA,EAC3BD,EAAAA,EAAAA,KAAA,SACEyD,KAAK,OACLC,KAAK,cACLC,YAAY,eACZC,MAAOxC,EACPyC,SAAU,SAACN,GAAC,OAAKlC,EAAckC,EAAEO,OAAOF,MAAM,KAEhD5D,EAAAA,EAAAA,KAAA,UAAQyD,KAAK,SAAQxD,SAAC,WACrBuB,EAActB,KAAI,SAACC,GAAK,OACzBH,EAAAA,EAAAA,KAACL,EAAS,CAAgBQ,MAAOA,GAAjBA,EAAMM,GAAoB,OAG3CmB,IAAa5B,EAAAA,EAAAA,KAAC+D,EAAAA,EAAM,MAG3B,C","sources":["components/MovieList/MovieList.jsx","pages/Movies.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\n\nexport const MovieList = ({ movies }) => {\n    const location = useLocation();\n    return (\n        <div>\n            {movies.map((movie) => (\n                <div key={movie.id}>\n                    <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n                    <h2>{movie.title}</h2>\n                    </Link>\n                </div>\n            ))}\n        </div>\n    );\n};","import React, { useEffect, useState } from \"react\";\nimport api from \"components/services/api\";\nimport { toast } from \"react-toastify\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { MovieList } from \"components/MovieList/MovieList\";\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const query = searchParams.get('query');\n\n\n  useEffect(() => {\n    if (!query) return; \n    const searchMovies = async () => {  \n      try {\n        setIsLoading(true);\n        const response = await api.get('/search/search-movies', {\n          params: { query },\n        });\n        setSearchResults(response.data.results);\n      } catch (error) {\n        toast(`Error searching movies: ${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    searchMovies(); \n  }, [query]);\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSearchParams({ query: inputValue });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"searchInput\"\n          placeholder=\"Search movie\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n        {searchResults.map((movie) => (\n        <MovieList key={movie.id} movie={movie} />\n))}\n      </form>\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default Movies;"],"names":["MovieList","_ref","movies","location","useLocation","_jsx","children","map","movie","Link","state","from","to","concat","id","title","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","inputValue","setInputValue","_useState3","_useState4","searchResults","setSearchResults","_useState5","_useState6","isLoading","setIsLoading","query","get","useEffect","searchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","api","params","sent","data","results","t0","toast","message","finish","stop","apply","arguments","_jsxs","onSubmit","e","preventDefault","type","name","placeholder","value","onChange","target","Loader"],"sourceRoot":""}